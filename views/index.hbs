<h1>{{title}}</h1>
<p>Welcome to {{title}}</p>

<div class="row">
    <div class="col-6">
        <canvas id="canvas0"></canvas>
    </div>
    <div class="col-6">
        <canvas id="canvas1"></canvas>
    </div>
    <div class="col-6">
        <canvas id="canvas2"></canvas>
    </div>
    <div class="col-6">
        <canvas id="canvas3"></canvas>
    </div>
</div>


<hr/>
<div class="text-center">
    <button class="btn btn-sm btn-outline-primary mx-2" id="btn-water">Water</button>
    <button class="btn btn-sm btn-outline-primary mx-2" id="btn-photo">Photo</button>
</div>

<script src="/node_modules/jquery/dist/jquery.min.js"></script>
<script src="/node_modules/popper.js/dist/umd/popper.min.js"></script>
<script src="/node_modules/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="/node_modules/moment/min/moment-with-locales.js"></script>
<script src="/node_modules/chart.js/dist/Chart.min.js"></script>
<script src="/node_modules/chart.js/samples/utils.js"></script>

<script>
    $(document).ready(function () {
        function newDate(days) {
            return moment().add(days, '1m').toDate();
        }

        function newDateString(days) {
            return moment().add(days, '1m').format();
        }

        var color = Chart.helpers.color;

        function getConfig(name, unit, _color, suggestedMin, suggestedMax) {
            return ({

                type: 'line',
                data: {
                    datasets: [{
                        label: name,
                        backgroundColor: color(_color).alpha(0.5).rgbString(),
                        borderColor: _color,
                        fill: false,
                        data: [/*{
                        x: newDateString(0),
                        y: randomScalingFactor()
                    }, {
                        x: newDateString(2),
                        y: randomScalingFactor()
                    }, {
                        x: newDateString(4),
                        y: randomScalingFactor()
                    }, {
                        x: newDateString(5),
                        y: randomScalingFactor()
                    }*/],
                    }]
                },
                options: {
                    responsive: true,
                    title: {
                        display: false,
                        text: name + ' Data'
                    },
                    scales: {
                        xAxes: [{
                            type: 'time',
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Time'
                            },
                            ticks: {
                                major: {
                                    fontStyle: 'bold',
                                    fontColor: '#FF0000'
                                }
                            },
                            time: {
                                min: moment().subtract(5, 'm').toDate(),
                                max: moment().toDate(),
                            }
                        }],
                        yAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: name + ' / ' + unit
                            },
                            ticks: {
                                suggestedMin: suggestedMin,
                                suggestedMax: suggestedMax
                            }
                        }]
                    }
                }
            });
        }

        var i;
        var myLines = [];
        var colors = [window.chartColors.red, window.chartColors.blue, window.chartColors.orange, window.chartColors.purple];
        var names = ['Humidity', 'Temperature', 'Luminance', 'Soil Moisture'];
        var attrs = ['humanity', 'temperature', 'luminance', 'moisture'];
        var units = ['%RH', 'â„ƒ', 'lx', '%'];
        var limits = [[0, 100], [0, 40], [0, 100], [0, 50]];
        for (i = 0; i < 4; i++) {
            myLines.push(new Chart(
                    document.getElementById('canvas' + i).getContext('2d'),
                    getConfig(names[i], units[i], colors[i], limits[i][0], limits[i][1])
            ));
        }

        function setData(data) {
            var newData = [[], [], [], []];
            var i, j;
            for (i = 0; i < data.length; i++) {
                for (j = 0; j < 4; j++) {
                    newData[j].push({x: data[i].updatedAt, y: data[i][attrs[j]]});
                }
            }
            var newTime = {
                min: moment().subtract(5, 'm').toDate(),
                max: moment().toDate(),
            };
            for (i = 0; i < 4; i++) {
                myLines[i].data.datasets[0].data = newData[i];
                myLines[i].options.scales.xAxes[0].time = newTime;
                myLines[i].update({
                    duration: 0
                });
            }
            console.log('updated', newTime.max, data);
        }

        $("#btn-water").on('click', function () {
            $.get({
                url: '/water',
                success: (data) => {
                    console.log(data)
                }
            });
        });

        $("#btn-photo").on('click', function () {
            $.get({
                url: '/photo',
                success: (data) => {
                    console.log(data)
                }
            });
        });

        setInterval(function () {
            $.get({
                url: '/data',
                success: function (data) {
                    // console.log(JSON.parse(data))
                    setData(JSON.parse(data));
                }
            });
        }, 1000);


    });
</script>